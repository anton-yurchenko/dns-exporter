name: tests
on:
  push:
    branches:
      - master

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Init
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          go get -v -t -d ./...

      - name: Lint
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          curl -s https://api.github.com/repos/golangci/golangci-lint/releases/latest | grep browser_download_url | grep linux-amd64 | cut -d : -f 2,3 | tr -d \" | wget -i -
          tar -xvf golangci-lint-*-linux-amd64.tar.gz --strip=1 --no-anchored golangci-lint
          ./golangci-lint run ./...

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Init
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          go get -v -t -d ./...

      - name: Test
        run: go test $(go list ./... | grep -v vendor | grep -v mocks) -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: coverage
          name: commit
          fail_ci_if_error: true

  analyze:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
